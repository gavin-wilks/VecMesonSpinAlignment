#!/bin/bash

#SBATCH -t 23:25:00   --ntasks=3 --account nstaff

# Pick one of the following lines to toggle: chos or shifter or Cori
# (toggle  '#-SBATCH' vs. '#SBATCH'  )
#-SBATCH -J star-chos -p shared-chos 
#SBATCH -J star-shift -p shared --image=custom:pdsf-sl64-star:v3
#-SBATCH -J star-cori -p debug -N1 --image=custom:pdsf-sl64-star:v6  -C haswell

echo "start-A "`hostname`" in PWD="`pwd`

startSkew=1200 # (seconds), random delay for task
# startSkew=60 # (seconds), random delay for resubmit or test
nsleep=$(($RANDOM % $startSkew))
echo nsleep=$nsleep
sleep $nsleep

#tasks script to be executed
job_sh=ToFMatching.csh

##########Energy Selection##########
# export energy=0  # 7.7GeV
# export Energy=7GeV

export energy=1  # 11.5GeV
export Energy=11GeV

# export energy=2  # 19.6GeV
# export Energy=19GeV

# export energy=3  # 27GeV
# export Energy=27GeV

# export energy=4  # 39GeV
# export Energy=39GeV

# export energy=5  # 62.4GeV
# export Energy=62GeV

# export energy=6  # 200GeV
# export Energy=200GeV
##########Energy Selection##########

# use data from the submit_$Energy.list
export PATH_XRD=/global/homes/x/xusun/STAR/VecMesonSpinAlignment/TreeProduction/submit/List/AuAu${Energy}
dataList=${PATH_XRD}/submit_${Energy}.list
# dataList=${PATH_XRD}/failed_${Energy}_${SM}.list # resubmit mode
export STAR_VER=pro

kD=$(($SLURM_ARRAY_TASK_ID + 1))
echo pick data $kD from list $dataList
dataName=`head -n $kD  $dataList | tail -n1`
# dataName=`head -n $(($kD - 2000))  $dataList | tail -n1` # resubmit mode
echo $dataName

export LOG_PATH=/project/projectdirs/starprod/rnc/xusun/OutPut/AuAu${Energy}/Log/SLURM
mkdir -p $LOG_PATH
echo write ToFMatching logs to  $LOG_PATH

# pick STAR library you want to use
export EXEC_NAME=root4star

# prepare sandbox - it is done for you by SLURM
export WRK_DIR=$SLURM_TMP

# used code must be copied to the sandbox
# optional:
# it is safer to copy all code to the sandbox, so job still runs fine even if you recompile your local code 
codeDir=/global/homes/x/xusun/STAR/VecMesonSpinAlignment/

echo Prepare a local copy of binaries
time( cp -rpL ToFMatching.csh $WRK_DIR ; cp -rpL $codeDir  $WRK_DIR )

echo run job in STAR_VER=$STAR_VER  WRK_DIR=$WRK_DIR
echo see vCores=$SLURM_CPUS_ON_NODE

ls -l  ${job_sh}
ls -l ${WRK_DIR}/VecMesonSpinAlignment/ToFMatching/
if [[ $SLURM_JOB_PARTITION == *"-chos" ]]
then
    echo  run-in-chos
    CHOS=sl64 chos  $WRK_DIR/${job_sh} $dataName
else
    echo  run-in-shifter
    # minor operation allowing to jump into tcsh inside shifter image
    unset MODULE_VERSION_STACK
    unset MODULE_VERSION
    unset MODULEPATH MODULESHOME
    unset LOADEDMODULES PRGENVMODULES
    shifter   --volume=/global/project:/project   /bin/tcsh $WRK_DIR/${job_sh} $dataName
fi
echo end-A-slurm-job

# mv slurm log to final destination 
if [ -z ${SLURM_ARRAY_JOB_ID+x} ]; then 
  mv slurm-${SLURM_JOB_ID}.out $LOG_PATH
else 
  mv slurm-${SLURM_ARRAY_JOB_ID}_${SLURM_ARRAY_TASK_ID}.out $LOG_PATH
fi

